:root {
	/* Theme variables */
	--phase-color: #CFB991;
	--phase-text-color: #222; /* Adjust to #fff if contrast requires */
	--arrow-color: #000000;
	--surface-bg: #ffffff;
	--border-color: rgba(0, 0, 0, 0.08);
	--shadow-color: rgba(0, 0, 0, 0.08);
	--block-radius: 8px;
	--gap: 16px;
	--padding-block: 16px;
	--padding-inline: 24px;
	--font-family: "Acumin Pro", "acumin-pro", "AcuminPro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
}

/* Global typography */
body {
	font-family: var(--font-family);
}

/* Basic reset for embedded environments (WordPress / Cascade CMS) */
.phase-diagram, .phase-diagram * {
	box-sizing: border-box;
}

/* Hide headings visually but keep for screen readers */
.visually-hidden {
	position: absolute !important;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}

.phase-diagram {
	background: var(--surface-bg);
}

/* Container uses flex with wrapping to support variable number of phases */
.phases {
	list-style: none;
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
	justify-content: center;
	gap: var(--gap);
	margin: 0;
	padding: 0;
}

/* Phase blocks: equal-width, responsive */
.phase-block {
	background: var(--phase-color);
	color: var(--phase-text-color);
	border-radius: var(--block-radius);
	box-shadow: 0 1px 2px var(--shadow-color), 0 0 0 1px var(--border-color);
	padding: 0; /* move padding into internal card sections */
	text-align: center;
	min-width: 160px;
	flex: 1 1 180px; /* grows evenly, wraps when narrow */
	display: flex;
	flex-direction: column;
	align-items: stretch; /* allow inner sections to stretch full width */
	justify-content: flex-start;
	overflow: hidden; /* clip inner separators to rounded corners */
}

.phase-card-header {
	padding: var(--padding-block) var(--padding-inline);
}

.phase-card-body {
	background: var(--surface-bg);
	padding: 10px var(--padding-inline) var(--padding-block) var(--padding-inline);
	border-top: 1px solid var(--border-color);
	text-align: left;
	flex: 1 1 auto; /* fill remaining height so white extends to bottom */
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
}

.phase-heading {
	margin: 0 0 6px 0;
	font-size: 1rem;
	font-weight: 500;
	line-height: 1.2;
}

.phase-title {
	margin: 0;
	font-size: 0.95rem;
	font-weight: 700;
	line-height: 1.2;
}

.phase-points {
	margin: 10px 0 0 0;
	padding-left: 1.1em;
	list-style: disc;
	text-align: left;
	align-self: stretch; /* override center alignment of block contents */
}

.phase-points li {
	margin: 4px 0;
	font-size: 1rem;
	line-height: 1.5;
}

/* Arrow elements between phases */
.arrow {
	flex: 0 0 auto;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	margin-inline: 0;
	margin-block: 0;
	width: 28px;
	height: 28px;
	color: var(--arrow-color); /* SVG uses currentColor */
	align-self: center; /* center vertically vs blocks (row) and horizontally on column */
}

.arrow-svg {
	display: block;
	width: 100%;
	height: 100%;
}

/* Horizontal layout: default (desktop/tablet) */
@media (min-width: 921px) {
	.phases {
		flex-direction: row;
		flex-wrap: nowrap; /* keep all items (blocks + arrows) on one row */
		gap: 0; /* remove gaps so widths add up precisely to 100% */
	}
	:root {
		--blocks-per-row: 5;
		--arrows-per-row: 4;
		/* Each block gets 90% of an equal share */
		--block-basis: calc((100% / var(--blocks-per-row)) * 0.9);
	}
	/* Fixed basis for blocks to be 10% less than equal share */
	.phase-block {
		flex: 0 0 var(--block-basis);
	}
	/* Arrows fill the remaining width evenly */
	.arrow {
		flex: 0 0 calc((100% - (var(--blocks-per-row) * var(--block-basis))) / var(--arrows-per-row));
		width: auto; /* allow flex-basis to govern width */
		height: 24px; /* keep a consistent arrow height */
	}
	/* Arrow points right (default path) */
	.arrow-svg {
		transform: rotate(0deg);
		width: 100%;
		height: 100%;
	}
}

/* Vertical stacking on small screens */
@media (max-width: 920px) {
	.phases {
		flex-direction: column;
		align-items: stretch;
		gap: var(--gap);
	}
	/* Ensure blocks fully expand to content height on mobile */
	.phase-block {
		flex: 0 0 auto;
		width: 100%;
		height: auto;
		overflow: visible; /* avoid accidental clipping on small screens */
	}
	.phase-card-body {
		flex: 0 0 auto; /* don't force body to fill; allow natural height */
	}
	/* Rotate arrow to point down when stacked */
	.arrow-svg {
		transform: rotate(90deg);
	}
	/* Make arrows occupy minimal height between stacked blocks */
	.arrow {
		width: 24px;
		height: 24px;
		margin-inline: auto; /* center between full-width blocks */
	}
}

/* Optional hover focus styling for subtle interactivity */
.phase-block:where(:hover, :focus-within) {
	filter: brightness(0.98);
	box-shadow: 0 2px 6px var(--shadow-color), 0 0 0 1px var(--border-color);
}
